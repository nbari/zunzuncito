{"name":"Zunzuncito","tagline":"micro-framework for creating REST API's.","body":"### Design Goals\r\n* Keep it simple and small, avoid extra complexity at all cost [KISS](http://en.wikipedia.org/wiki/KISS_principle).\r\n* Creation of routes on the fly or by defining regular expressions.\r\n* Support API versions out of the box with out altering routes.\r\n* Via decorator or in a defined route, accept only certain HTTP methods. \r\n* Follow the single responsibility principle.\r\n* Be compatible with any WSGI server, example: [uWSGI](http://uwsgi-docs.readthedocs.org/en/latest/), [Gunicorn](http://gunicorn.org/), [Twisted](http://twistedmatrix.com/), etc.\r\n* Structured Logging using JSON.\r\n\r\n\r\n### What & Why ZunZuncito\r\nZunZuncito is a python development that allows to create and maintain [REST](http://en.wikipedia.org/wiki/REST) API's with out hassle.  \r\n\r\nThe simplicity for sketching  and debugging helps to develop very fast, versioning is inherit by default, which allow to serve and maintain existing applications, while working in new releases without need to create separate instances, all the applications are  WSGI [PEP 333](http://www.python.org/dev/peps/pep-0333/) compliant, allowing to migrate existing code to more robust frameworks, without need to modify existing code.\r\n\r\nFor example, if API v3.0 is the latest API version, the following two should be aliases (i.e. behave identically to all API requests):\r\n\r\nhttp://api.zunzun.io/customers/1234\r\nhttp://api.zunzun.io/v3.0/customers/1234\r\nhttp://api.zunzun.io/v3/customers/1234\r\n\r\n\r\n\r\n ","google":"UA-45578428-1","note":"Don't delete this file! It's used internally to help with page regeneration."}